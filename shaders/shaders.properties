#Lux Shaders settings

#Screen settings
screen=[Shading] [Raytracing] [Voxelization] [Surface] [Debug]

#Shading settings
screen.Shading=SHADING_MODEL

#Raytracing settings
screen.Raytracing=MAX_RAY_STEPS MAX_INDIRECT_SAMPLES MAX_BOUNCES

#Voxelization settings
screen.Voxelization=LIMIT_Y_AXIS_VOXELIZATION

#Surface settings
screen.Surface=TEXTURE_RESOLUTION

#Debug settings
screen.Debug=DEBUG DEBUG_MODE

#MC Settings
vignette=false
separateAo=true
frustum.culling=true

shadowtranslucent=true

alphaTest.gbuffers_textured=off
alphaTest.gbuffers_water=off
alphaTest.shadow=off

blend.gbuffers_textured=off
blend.gbuffers_water=off
blend.shadow=off

texture.deferred.depthtex1 = minecraft:textures/atlas/blocks.png
texture.deferred.depthtex2 = minecraft:textures/atlas/blocks_n.png
texture.deferred.shadowtex1 = minecraft:textures/atlas/blocks_s.png

variable.float.wSunDirX = sunPosition.x * gbufferModelView.0.0 + sunPosition.y * gbufferModelView.0.1 + sunPosition.z * gbufferModelView.0.2
variable.float.wSunDirY = sunPosition.x * gbufferModelView.1.0 + sunPosition.y * gbufferModelView.1.1 + sunPosition.z * gbufferModelView.1.2
variable.float.wSunDirZ = sunPosition.x * gbufferModelView.2.0 + sunPosition.y * gbufferModelView.2.1 + sunPosition.z * gbufferModelView.2.2
variable.float.sunLength = sqrt(wSunDirX*wSunDirX + wSunDirY*wSunDirY + wSunDirZ*wSunDirZ)
uniform.vec3.sunDirection = vec3(wSunDirX / sunLength, wSunDirY / sunLength, wSunDirZ / sunLength)

uniform.float.seed = random()
